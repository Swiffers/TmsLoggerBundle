<a href="{{ path('tms_logger_api_logs_by_hash_get', { 'hash': tms_logger_hash(entity) }) }}" class="btn btn-default tms_logger_ajax_history_link">
   {{ link|trans }}
</a>

<script type="text/javascript">
    function escape(s) {
        var n = s;
        n = n.replace(/&/g, "&amp;");
        n = n.replace(/</g, "&lt;");
        n = n.replace(/>/g, "&gt;");
        n = n.replace(/"/g, "&quot;");

        return n;
    }

    function diffString( o, n ) {
      o = o.replace(/\s+$/, '');
      n = n.replace(/\s+$/, '');

      var out = diff(o == "" ? [] : o.split(/\s+/), n == "" ? [] : n.split(/\s+/) );
      var str = "";

      var oSpace = o.match(/\s+/g);
      if (oSpace == null) {
        oSpace = ["\n"];
      } else {
        oSpace.push("\n");
      }
      var nSpace = n.match(/\s+/g);
      if (nSpace == null) {
        nSpace = ["\n"];
      } else {
        nSpace.push("\n");
      }

      if (out.n.length == 0) {
          for (var i = 0; i < out.o.length; i++) {
            str += '<del>' + escape(out.o[i]) + oSpace[i] + "</del>";
          }
      } else {
        if (out.n[0].text == null) {
          for (n = 0; n < out.o.length && out.o[n].text == null; n++) {
            str += '<del>' + escape(out.o[n]) + oSpace[n] + "</del>";
          }
        }

        for ( var i = 0; i < out.n.length; i++ ) {
          if (out.n[i].text == null) {
            str += '<ins>' + escape(out.n[i]) + nSpace[i] + "</ins>";
          } else {
            var pre = "";

            for (n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {
              pre += '<del>' + escape(out.o[n]) + oSpace[n] + "</del>";
            }
            str += " " + out.n[i].text + nSpace[i] + pre;
          }
        }
      }

      return str;
    }

    function randomColor() {
        return "rgb(" + (Math.random() * 100) + "%, " + 
                        (Math.random() * 100) + "%, " + 
                        (Math.random() * 100) + "%)";
    }
    function diffString2( o, n ) {
      o = o.replace(/\s+$/, '');
      n = n.replace(/\s+$/, '');

      var out = diff(o == "" ? [] : o.split(/\s+/), n == "" ? [] : n.split(/\s+/) );

      var oSpace = o.match(/\s+/g);
      if (oSpace == null) {
        oSpace = ["\n"];
      } else {
        oSpace.push("\n");
      }
      var nSpace = n.match(/\s+/g);
      if (nSpace == null) {
        nSpace = ["\n"];
      } else {
        nSpace.push("\n");
      }

      var os = "";
      var colors = new Array();
      for (var i = 0; i < out.o.length; i++) {
          colors[i] = randomColor();

          if (out.o[i].text != null) {
              os += '<span style="background-color: ' +colors[i]+ '">' + 
                    escape(out.o[i].text) + oSpace[i] + "</span>";
          } else {
              os += "<del>" + escape(out.o[i]) + oSpace[i] + "</del>";
          }
      }

      var ns = "";
      for (var i = 0; i < out.n.length; i++) {
          if (out.n[i].text != null) {
              ns += '<span style="background-color: ' +colors[out.n[i].row]+ '">' + 
                    escape(out.n[i].text) + nSpace[i] + "</span>";
          } else {
              ns += "<ins>" + escape(out.n[i]) + nSpace[i] + "</ins>";
          }
      }

      return { o : os , n : ns };
    }

    function diff( o, n ) {
      var ns = new Object();
      var os = new Object();

      for ( var i = 0; i < n.length; i++ ) {
        if ( ns[ n[i] ] == null )
          ns[ n[i] ] = { rows: new Array(), o: null };
        ns[ n[i] ].rows.push( i );
      }

      for ( var i = 0; i < o.length; i++ ) {
        if ( os[ o[i] ] == null )
          os[ o[i] ] = { rows: new Array(), n: null };
        os[ o[i] ].rows.push( i );
      }

      for ( var i in ns ) {
        if ( ns[i].rows.length == 1 && typeof(os[i]) != "undefined" && os[i].rows.length == 1 ) {
          n[ ns[i].rows[0] ] = { text: n[ ns[i].rows[0] ], row: os[i].rows[0] };
          o[ os[i].rows[0] ] = { text: o[ os[i].rows[0] ], row: ns[i].rows[0] };
        }
      }

      for ( var i = 0; i < n.length - 1; i++ ) {
        if ( n[i].text != null && n[i+1].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null && 
             n[i+1] == o[ n[i].row + 1 ] ) {
          n[i+1] = { text: n[i+1], row: n[i].row + 1 };
          o[n[i].row+1] = { text: o[n[i].row+1], row: i + 1 };
        }
      }

      for ( var i = n.length - 1; i > 0; i-- ) {
        if ( n[i].text != null && n[i-1].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null && 
             n[i-1] == o[ n[i].row - 1 ] ) {
          n[i-1] = { text: n[i-1], row: n[i].row - 1 };
          o[n[i].row-1] = { text: o[n[i].row-1], row: i - 1 };
        }
      }

      return { o: o, n: n };
    }
</script>
<script type="text/javascript">
$(document).ready(function() {
    $('.tms_logger_ajax_history_link').on('click', function(event) {
        event.preventDefault();
        var url = $(this).attr('href');

        $.getJSON(url, function(data){
        })
        .done(function(data) {
            $out = $('\
                <div id="tms_logger_history_modal" tabindex="-1" class="modal fade">\
                    <div class="modal-dialog">\
                        <div class="modal-content">\
                            <div class="modal-header">\
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\
                                <h3>{% trans %}History{% endtrans %}</h3>\
                            </div>\
                            <div class="modal-body">\
                                <table class="table table-condensed table-bordered">\
                                    <thead>\
                                        <tr>\
                                            <th>{% trans %}Created at{% endtrans %}</th>\
                                            <th>{% trans %}Action{% endtrans %}</th>\
                                            <th>{% trans %}Information{% endtrans %}</th>\
                                            <th>{% trans %}Show{% endtrans %}</th>\
                                        </tr>\
                                    </thead>\
                                    <tbody></tbody>\
                                </table>\
                            </div>\
                        <div>\
                    <div>\
                </div>\
            ');

            var $tbody = $out.find('tbody');
            $.each(data, function(k, v) {
                var $row = $('\
                    <tr>\
                        <td>'+v.createdAt+'</td>\
                        <td>'+v.action+'</td>\
                        <td class="information"></td>\
                        <td></td>\
                    </tr>\
                ');

                if (v.information) {
                    var length = Object.keys(jQuery.parseJSON(v.information)).length;
                    var index = 0;
                    var $summary = $('<div class="summary"></div>');
                    $.each(jQuery.parseJSON(v.information), function(i, item) {
                        index++;
                        var comma = (index == length) ? '' : ',';
                        $summary.append('<span>'+i+comma+' <span>');
                    });
                    $show = $('\
                        <a href="#">\
                            <i class="fa fa-plus-square"></i>\
                        </a>\
                    ');
                    $row.find('td:last-child').append($show);

                    var $information = $('\
                        <div style="overflow-wrap: break-word;" class="fields">\
                            <p>\
                                <span><i class="fa fa-cog"></i> '+v.action+'</span><br/>\
                                <span><i class="fa fa-clock-o"></i> '+v.createdAt+'</span>\
                            </p>\
                            <h4>{% trans %}Fields diff{% endtrans %}</h4>\
                        </div>\
                    ');
                    $.each(jQuery.parseJSON(v.information), function(i, item) {
                        var before = item[0] == null ? '' :
                            typeof item[0] == 'string' ?
                                item[0] :
                                item[0].toSource()
                        ;

                        var after = item[1] == null ? '' :
                            typeof item[1] == 'string' ?
                                item[1] :
                                item[1].toSource()
                        ;

                        var diff = diffString(before, after);

                        $information.append('\
                            <div><strong>'+i+"</strong> : "+diff+'</div>\
                        ');
                    });

                    $information.css('display', 'none');
                    $row.find('.information').append($summary);
                    $row.find('.information').append($information);

                    $show.on('click', function(e) {
                        e.preventDefault();
                        var $backButton = $('<button class="btn btn-default">{% trans %}Back to the list{% endtrans %}</button><br/><br/>');
                        var $info = $(this).closest('tr').find('td.information div.fields').clone();
                        console.log($info);
                        $info.css('display', 'block');
                        $info.prepend($backButton);
                        $('.modal .modal-body > table').css('display', 'none');
                        $('.modal .modal-body').append($info);

                        $backButton.on('click', function(e) {
                            $('.modal .modal-body > div.fields').remove();
                            $('.modal .modal-body > table').css('display', 'table');
                        });
                    });
                }
                $tbody.append($row);
            });
            $('body').append($out);
            $('#tms_logger_history_modal').modal('show');

            $('#tms_logger_history_modal').on('hidden.bs.modal', function (e) {
                $('.modal .modal-body > div.fields').remove();
                $('.modal .modal-body > table').css('display', 'table');
            });
        })
        .fail(function(jqxhr, textStatus, error) {
            var err = textStatus + ", " + error;
            console.log( "Request Failed: " + err );
        });
    });
});
</script>